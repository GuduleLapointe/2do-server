#!/bin/bash

[ "$1" ] && [ -d "$1" ] && OUTPUT="$1" && shift

# set -eu

which gmake || alias gmake=make

while true; do

  echo ${PATH}
  echo `pwd`

  PGM=$(basename $0)
  TMP=/tmp/$PGM.$$
  BINDIR=$(dirname $(realpath $0))
  BASEDIR=$(dirname $BINDIR)
  [ ! -f "$BASEDIR/main.py" ] && echo "Program not found in $BASEDIR" && exit 1

  [ ! "$OUTPUT" ] && OUTPUT="$BASEDIR/html"

  cd "$OUTPUT"  || exit $?
  cd $BASEDIR || exit $?

  echo "BINDIR: $BINDIR"
  echo "BASEDIR: $BASEDIR"
  echo "OUTPUT: $OUTPUT"
  echo "ARGS: $@"
  export PATH=$PATH:$BINDIR:$BASEDIR

  echo "=======> `date`"
  echo "       > start fetch"

  set -eu

  ./main.py -f

  now=`date +%s`
  last=`expr ${now} + 2592000`
  first=`expr ${now} - 86400`

  echo "now ${now} last ${last}"

  echo "write json"

  after=`date -r ${first} +%Y-%m-%d`
  [ ! "$after" ] && continue

  ./main.py -w -e json -o "${OUTPUT}/events.json.new" -a "$after" -b `date -r ${last} +%Y-%m-%d`

  mv ${OUTPUT}/events.json.new ${OUTPUT}/events.json

  echo "write lsl"

  ./main.py -w -e lsl -o "${OUTPUT}/events.lsl.new" -a "`date`"
  ./main.py -w -e lsl2 -o "${OUTPUT}/events.lsl2.new" -a "`date`"

  mv ${OUTPUT}/events.lsl.new ${OUTPUT}/events.lsl
  mv ${OUTPUT}/events.lsl2.new ${OUTPUT}/events.lsl2

  echo "write html"

  ./main.py -w -e html -o "html/events.html" -a "`date`"

  cd html

  gmake

  cp style.css "${OUTPUT}/style.css.new"
  cp scr.js "${OUTPUT}/scr.js.new"
  cp index.html "${OUTPUT}/index.html.new"

  mv "${OUTPUT}/style.css.new" "${OUTPUT}/style.css"
  mv "${OUTPUT}/scr.js.new" "${OUTPUT}/scr.js"
  mv "${OUTPUT}/index.html.new" "${OUTPUT}/index.html"

  sleep 300

done
